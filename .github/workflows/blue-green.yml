name: 'Terraform Blue-Green Deployment'
on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1  
  TF_ACTION_WORKING_DIR: 'terraform' 


jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest   # Use the latest Ubuntu runner

    steps:
      # Check out the code to the runner
      - name: Checkout
        uses: actions/checkout@v4
      
      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} # Use your stored AWS Access Key ID
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }} # Use your stored AWS Secret Access Key
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: ${{ env.AWS_REGION }} # Use the region from your environment variables
          
      # Set up the specified version of Terraform
      - name: Terraform
        uses: hashicorp/setup-terraform@v3
      
      # Initialize your Terraform configuration
      - name: Terraform Init
        run: terraform init

      # Validate your Terraform configuration
      - name: Terraform Validate
        run: terraform validate -no-color

      # Generate and display an execution plan
      - name: Terraform Plan
        run: terraform plan
      # Apply the changes required to reach the desired state of the configuration
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve

      # Check the status of the Blue environment (pseudo-code)
      - name: Check status of Blue Environment
        id: blue_status
        run: echo "::set-output name=status::$(terraform output -raw blue_status)"

      # Check the status of the Green environment (pseudo-code)
      - name: Check status of Green Environment
        id: green_status
        run: echo "::set-output name=status::$(terraform output -raw green_status)"

      # Switch traffic to the Green environment if the Blue environment is currently live (pseudo-code)
      - name: Switch traffic to Green if Blue is currently live
        if: steps.blue_status.outputs.status == 'live'
        run: |
          terraform apply -var='live_environment=green' -auto-approve
          echo "Switched live traffic to Green environment"

      # Switch traffic to the Blue environment if the Green environment is currently live
      - name: Switch traffic to Blue if Green is currently live
        if: steps.green_status.outputs.status == 'live'
        run: |
          terraform apply -var='live_environment=blue' -auto-approve
          echo "Switched live traffic to Blue environment"